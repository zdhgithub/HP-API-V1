<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.heipiao.api.mapper.AccountRecordMapper">

	<resultMap type="AccountRecord" id="baseResultMap">
		<result column="f_uid" property="uid" />
		<result column="f_direction" property="direction" />
		<result column="f_trade_type" property="tradeType" />
		<result column="f_trade_money" property="tradeMoney" />
		<result column="f_trade_time" property="tradeTime" />
		<result column="f_description" property="description" />
		<result column="f_trade_status" property="status" />
		<result column="f_other_side" property="otherSide" />
		<result column="f_order_id" property="orderId" />
		<result column="f_fish_site_id" property="siteId" />
	</resultMap>
	<resultMap type="AccountExt" id="accountExtResultMap">
		<result column="f_uid" property="uid" />
		<result column="f_user_portriat" property="portriat" />
		<result column="f_user_nickname" property="nickname" />
		<result column="f_user_realname" property="realName" />
		<result column="f_user_phonenum" property="phone" />
		<result column="f_balance" property="balance" />
		<result column="recharge_sum" property="rechargeTotal" />
		<result column="withdraws_sum" property="withdrawTotal" />
	</resultMap>

	<resultMap type="AccountExtSite" id="accountExtSiteResultMap">
		<result column="f_uid" property="uid" />
		<result column="f_fish_site_id" property="fishSiteId" />
		<result column="f_fish_site_name" property="fishSiteName" />
		<result column="f_user_nickname" property="nickname" />
		<result column="f_user_phonenum" property="phone" />
		<result column="f_main_img" property="mainImg" />
		<result column="f_balance" property="balance" />
		<result column="deposits" property="depositFish" />
		<result column="withdraw_total" property="withdrawTotal" />
	</resultMap>

	<sql id="base_column">
		f_uid,f_direction,f_trade_type,f_trade_money,f_trade_time,f_description,f_order_id,f_other_side,f_trade_status
	</sql>
	<select id="countRecords" parameterType="int" resultType="int">
		SELECT
		COUNT(*)
		FROM
		t_account_record
		WHERE
		f_uid = #{uid}
	</select>
	<select id="selectByUid" resultMap="baseResultMap">
		select *
		from t_account_record
		where f_uid = #{uid}
		<if test="type != null">
		  and f_trade_type = #{type}
		</if>
		<if test="status != null">
			and f_trade_status = #{status}
		</if>
		order by f_trade_time
		desc
		<if test="start != null and size!=null">
			LIMIT #{start},#{size}
		</if>
	</select>
	
	<select id="selectRecordBySite" resultMap="baseResultMap">
		select *
		from t_account_record
		where f_fish_site_id = #{siteId}
		<if test="type != null">
		  and f_trade_type = #{type}
		</if>
		<if test="status != null">
			and f_trade_status = #{status}
		</if>
		<if test="searchfor != null">
			and f_description LIKE CONCAT(CONCAT('%', #{searchfor}), '%') or f_other_side LIKE CONCAT(CONCAT('%', #{searchfor}), '%') or f_order_id LIKE CONCAT(CONCAT('%', #{searchfor}), '%')
		</if>
		order by f_trade_time
		desc
		<if test="start != null and size!=null">
			LIMIT #{start},#{size}
		</if>
	</select>

	<select id="selectList" resultMap="accountExtResultMap">
		SELECT DISTINCT
		u.f_uid,
		u.f_user_portriat,
		u.f_user_nickname,
		u.f_user_realname,
		u.f_user_phonenum,
		a.f_gold_coin as f_balance,
		(
		SELECT
		(
		CASE
		WHEN SUM(r.f_trade_fee) IS
		NULL THEN
		'0'
		ELSE
		SUM(r.f_trade_fee)
		END
		)
		FROM
		t_account_bill r
		WHERE
		r.f_type = 2
		AND u.f_uid = r.f_uid
		) AS recharge_sum,
		(
		SELECT
		(
		CASE
		WHEN SUM(r.f_trade_money) IS NULL THEN
		'0'
		ELSE
		SUM(r.f_trade_money)
		END
		)
		FROM
		t_account_record r
		WHERE
		r.f_trade_type in(5,6,12,17,19)
		AND u.f_uid =
		r.f_uid
		) AS withdraws_sum
		FROM
		t_user u,
		t_user_gold_coin a,
		t_account_record r
		WHERE
		u.f_uid = a.f_uid
		AND u.f_uid = r.f_uid
		ORDER BY
		u.f_user_register_time ASC
		<if test="start!=null and size!=null">
			LIMIT #{start},#{size}
		</if>
	</select>

	<select id="countAccountExts" resultType="int">
		SELECT COUNT(DISTINCT
		u.f_uid)
		FROM
		t_user u,
		t_user_gold_coin a,
		t_account_record r
		WHERE
		u.f_uid =
		a.f_uid
		AND u.f_uid = r.f_uid
	</select>

	<select id="selectListExt" resultMap="accountExtSiteResultMap">
		SELECT
		f.f_uid,
		f.f_fish_site_id,
		f.f_fish_site_name,
		u.f_user_nickname,
		u.f_user_phonenum,
		f.f_main_img,
		a.f_balance,
		(
		SELECT
		(
		CASE
		WHEN SUM(d.f_balance) IS NULL THEN
		'0'
		ELSE
		SUM(d.f_balance)
		END
		)
		FROM
		t_deposit_fish d
		WHERE
		f.f_fish_site_id = d.f_fish_site_id
		) AS deposits,
		(
		SELECT
		(
		CASE
		WHEN SUM(d.f_trade_money) IS NULL THEN
		'0'
		ELSE
		SUM(d.f_trade_money)
		END
		)
		FROM
		t_account_record d
		WHERE
		d.f_trade_type = '2'
		AND d.f_uid = u.f_uid
		) AS withdraw_total,
		(
		SELECT
		(
		CASE
		WHEN SUM(r.f_trade_money) IS NULL THEN
		'0'
		ELSE
		SUM(r.f_trade_money)
		END
		)
		FROM
		t_deposit_fish_record r
		WHERE
		r.f_direction = '1'
		AND r.f_fish_site_id = f.f_fish_site_id
		) AS depositfish_total
		FROM
		t_fish_site f,
		t_user u,
		t_account a
		WHERE
		f.f_uid = u.f_uid
		AND u.f_uid = a.f_uid
		<if test="regionId!=null and regionId!=0">
			AND f.f_city_id = #{regionId}
		</if>
		ORDER BY
		f.f_create_time
		<if test="start!=null and size!=null">
			LIMIT #{start},#{size}
		</if>
	</select>

	<select id="countAccountExtSites" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT
		COUNT(DISTINCT f.f_uid)
		FROM
		t_fish_site f,
		t_user u,
		t_account a
		WHERE
		f.f_uid = u.f_uid
		AND u.f_uid = a.f_uid
		<if test="regionId!=null and regionId!=0">
			AND f.f_city_id = #{regionId}
		</if>
	</select>

	<insert id="insertPojo" parameterType="AccountRecord">
		insert into t_account_record(
		<include refid="base_column" />
		)
		values(
		#{uid},
		#{direction},
		#{tradeType},
		#{tradeMoney},
		#{tradeTime},
		#{description},
		#{orderId},
		#{otherSide},
		#{status}
		)
	</insert>

</mapper>