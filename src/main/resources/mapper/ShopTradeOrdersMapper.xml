<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.heipiao.api.mapper.ShopTradeOrdersMapper">
	
	<resultMap type="shopTradeOrders" id="baseResultMap">
		<id column="f_order_id" property="orderId"/>
		<result column="f_uid" property="uid" />
		<result column="f_user_nickname" property="nickname"/>
		<result column="f_user_portriat" property="portriat"/>
		<result column="f_shop_id" property="shopId" />
		<result column="f_orders_money" property="ordersMoney" />
		<result column="f_pay_money" property="payMoney" />
		<result column="f_gold_coin_money" property="goldCoinMoney" />
		<result column="f_earnings_gold_coin_money" property="earningsGoldCoinMoney" />
		<result column="f_coupon_id" property="couponId" />
		<result column="f_coupons_money" property="couponsMoney" />
		<result column="f_other_coupons_money" property="otherCouponsMoney" />
		<result column="f_pay_time" property="payTime" />
		<result column="f_create_time" property="createTime" />
		<result column="f_status" property="status" />
		<result column="f_trade_no" property="tradeNo" />
		<result column="f_trade_platform" property="tradePlatform" />
		<result column="f_coupons_fee" property="couponsFee" />
		<result column="f_where_is_app" property="whereIsApp" />
		
		<result column="f_user_phonenum" property="phoneNum" />
	</resultMap>
	
	<sql id="base_column">
		f_order_id,f_uid,f_shop_id,f_orders_money ,f_pay_money ,f_gold_coin_money ,f_earnings_gold_coin_money,f_coupon_id,
		f_coupons_money,f_other_coupons_money,f_pay_time, f_create_time, f_status,f_trade_no,f_trade_platform,f_coupons_fee,
		f_distance,f_where_is_app
	</sql>
	
	<select id="getTradeRecord" parameterType="java.util.Map" resultMap="baseResultMap">
		select t1.*,t2.f_user_nickname ,t2.f_user_phonenum
		from
		(
			select * 
			from  t_shop_trade_orders
			where f_shop_id = #{shopId} 
				<if test="uid != null">
					and f_uid = #{uid}
				</if>
			 	  and f_status in(1,4)
			order by f_create_time desc
			limit #{page},#{size}
		)t1 left join t_user t2 on t1.f_uid = t2.f_uid
	</select>
	
	<select id="getTradeRecordCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(f_order_id) 
		from t_shop_trade_orders
		where f_shop_id = #{shopId}
			<if test="uid != null">
				and f_uid = #{uid}
			</if> 
			and  f_status in (1,4)
	</select>
	
	<select id="selectUidsByShopId" parameterType="java.lang.Long" resultType="java.lang.Long">
		select distinct f_uid
		from t_shop_trade_orders
		where f_shop_id = #{shopId} and (f_status = 1 or f_status = 4)
	</select>
	
	<select id="selectAsLockByOrderId" parameterType="java.lang.String" resultMap="baseResultMap">
		select 
		<include refid="base_column" />
		 from t_shop_trade_orders 
		 where f_order_id = #{orderId} for update
	</select>
	
	
	<select id="selectByOrderId" parameterType="java.lang.String" resultMap="baseResultMap">
		select 
		<include refid="base_column" />
		from t_shop_trade_orders 
		where f_order_id = #{orderId}
	</select>
	
	<!-- <select id="selectOrdersByUid" parameterType="java.util.Map" resultMap="baseResultMap">
		select 
		<include refid="base_column" />
		from t_shop_trade_orders 
		where f_uid = #{uid}
	</select> -->
	
	<select id="selectRecentOrders" parameterType="java.lang.Long" resultMap="baseResultMap">
		select *
		from t_user t right join 
		(
			select * 
			from t_shop_trade_orders
			where f_shop_id = #{shopId} and f_status = 1
			order by f_create_time desc
			limit 10) t2
		 on t.f_uid = t2.f_uid
	</select>
	
	<select id="selectOrdersByShopId" parameterType="java.util.Map" resultMap="baseResultMap">
			select * 
			from t_shop_trade_orders
			where f_shop_id = #{shopId} and f_status = 1
			<if test="index != null">
				and f_create_time <![CDATA[<]]> #{index}
			</if>
			order by f_create_time desc
			limit #{size}
	</select>
	
	<select id="selectCountCurrentMonthPayUid" parameterType="java.util.Map" resultType="int">
		select count( distinct f_uid)
		from  t_shop_trade_orders
		where  f_shop_id = #{shopId}  and f_status = 1
			and f_create_time <![CDATA[>]]> #{time}
	</select>
	
	<select id="selectCountCurrentMoney" parameterType="java.util.Map" resultType="java.lang.Double">
		select sum(f_orders_money)
		from  t_shop_trade_orders
		where  f_shop_id = #{shopId}  and f_status = 1
			and f_create_time <![CDATA[>=]]> #{curTime}
	</select>
	
	<select id="selectCountMoneyByMonth" parameterType="java.util.Map" resultType="java.lang.Double">
		select sum(f_orders_money)
		from  t_shop_trade_orders
		where  f_shop_id = #{shopId}  and f_status = 1
			and f_create_time <![CDATA[>=]]> #{minTime} and f_create_time <![CDATA[<]]> #{maxTime}
	</select>
	
	
	<select id="selectTimeoutOrders" parameterType="java.util.Map" resultType="java.lang.String">
		select f_order_id
		from t_shop_trade_orders
		where f_status = 0 
		limit #{size}
	</select>
	
	
	<insert id="insertPojo" >
		insert into t_shop_trade_orders(
			<include refid="base_column"/>
		)
		values (
			#{orderId},
			#{uid},
			#{shopId},
			#{ordersMoney},
			#{payMoney},
			#{goldCoinMoney},
			#{earningsGoldCoinMoney},
			#{couponId},
			#{couponsMoney},
			#{otherCouponsMoney},
			#{payTime},
			#{createTime},
			#{status},
			#{tradeNo},
			#{tradePlatform},
			#{couponsFee},
			#{distance},
			#{whereIsApp}
		)
	</insert>
	
	<update id="updatePart">
		update t_shop_trade_orders 
		<set>
			<if test="payTime != null">
				f_pay_time = #{payTime},
			</if>
			<if test="status != null">
				f_status = #{status},
			</if>
			<if test="tradeNo != null">
				f_trade_no = #{tradeNo},
			</if>
			<if test="tradePlatform != null">
				f_trade_platform = #{tradePlatform},
			</if>
		</set>
		where f_order_id = #{orderId}
	</update>

	<update id="updateStatus" parameterType="java.util.Map">
		update t_shop_trade_orders
		set f_status = #{status}
		where f_order_id = #{orderId}	
	</update>
	
</mapper>